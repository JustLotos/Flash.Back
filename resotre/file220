<template>
    <v-container>
        <v-card>
            <v-row justify="center">
                <v-col cols="9">
                    <v-flex>
                        <v-list class="pa0 m-0">
                            <v-list-item v-for="(id, index) in decksId" :key="index" class="pa-0">
                                <deck-list-item></deck-list-item>
                            </v-list-item>
                        </v-list>
                    </v-flex>
                </v-col>
            </v-row>
        </v-card>
<!--        <template v-slot:default="props">-->
<!--        </template>-->
        <!--                    <pagination :items-id="decksId"></pagination>-->


        <!--                    <list-objects :items="decks" :items-id="decksId">-->
        <!--                        <template v-slot:item="deck">-->
        <!--
                             </template>-->
        <!--                    </list-objects>-->


<!--        <template v-slot:empty>-->
<!--            <v-row justify="center">-->
<!--                <v-col cols="12" class="text-center">Колоды еще не добавлены</v-col>-->
<!--            </v-row>-->
<!--        </template>-->
<!--        <template v-slot:notFound>-->
<!--            <v-row justify="center">-->
<!--                <v-col cols="12" class="text-center">Колоды не найдены</v-col>-->
<!--            </v-row>-->
<!--        </template>-->
<!--            <v-card-text :class="createModalBtnPlacement">-->
<!--                <v-fab-transition>-->
<!--                    <v-tooltip top>-->
<!--                        <template v-slot:activator="{ on }">-->
<!--                            <v-btn v-on="on" @click="createModalToggle" color="primary" dark absolute top right fab>-->
<!--                                <v-icon>mdi-plus</v-icon>-->
<!--                            </v-btn>-->
<!--                        </template>-->
<!--                        <span>Добавить новую колоду</span>-->
<!--                    </v-tooltip>-->
<!--                </v-fab-transition>-->
<!--            </v-card-text>-->

<!--        <v-dialog v-model="createModal" max-width="700px">-->
<!--            <v-container>-->
<!--                <v-layout justify-center align-center class="position-relative">-->
<!--&lt;!&ndash;                    <deck-create @deck-created="handleSuccessCreate" />&ndash;&gt;-->
<!--                    <v-btn absolute top right icon dark @click="createModalToggle">-->
<!--                        <v-icon>mdi-close</v-icon>-->
<!--                    </v-btn>-->
<!--                </v-layout>-->
<!--            </v-container>-->
<!--        </v-dialog>-->

<!--        <success-modal v-model="successModal">{{successMessage}}</success-modal>-->
    </v-container>
</template>

<script lang="ts">
import { Component, Vue } from "vue-property-decorator";
import {DeckModule} from "../../Store/DeckModule";
import DeckListItem from "../Components/Deck/DeckListItem.vue";

Component.registerHooks(['beforeRouteEnter']);
@Component({components: {DeckListItem}})
export default class DecksPage extends Vue{
    beforeRouteEnter (to, from, next) {
        DeckModule.getAll();
        next();
    }
    get decksId(): Array<number>  {
        return DeckModule.getDecksId;
    }
    get decks() {
        return DeckModule.getDecks;
    }

    createModalBtnPlacement() {
        // let empty = !!this.decksId && !!this.decksId.length;
        let empty = false;
        return {
            'on-side': empty,
            'on-card': !empty
        }
    }
}
</script>

<style scoped>
    .on-side{
        position: fixed;
        right: 7%;
        bottom: 12%;
        z-index: 10;
        padding: 0;
    }
    .on-card{
        position: absolute;
        z-index: 10;
        top: 50%;
        left: -30%;
        padding: 0;
    }
    .position-relative{
        position: relative;
    }
</style>