import {Action, getModule, Module, Mutation, VuexModule} from "vuex-module-decorators";
import Store from "../../../Store";
import LearnerService from "../Service/LearnerService";

export interface UserName {
    firstName: string;
    lastName: string;
}

export interface ILearnerState {
    user: ILearnerResponse;
    isLoading: boolean;
}

export interface ILearnerResponse {
    name: UserName;
    email: string;
    status: string;
}

@Module({dynamic: true, store: Store, name: 'LearnerModule', namespaced: true})
class Learner extends VuexModule implements ILearnerState{
    user = {
        name: {firstName: '', lastName: ''},
        email:  '',
        status: '',
    }
    isLoading = false;

    @Mutation
    private GET_USER_PROFILE(data: ILearnerResponse)
    {
        this.user = data;
    }

    @Action({rawError: true})
    public async getProfile(): Promise<ILearnerResponse>{
        const response = await LearnerService.profile();
        this.GET_USER_PROFILE(response.data);
        return Promise.resolve(response.data);
    }
}

export const LearnerModule = getModule(Learner);