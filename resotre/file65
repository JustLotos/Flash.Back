<template>
    <v-toolbar-items class="hidden-sm-and-down">
        <v-menu v-for="link of menu" :key="link.name">
            <template v-slot:activator="{ on }">
                <v-btn v-on="on" :to="{ name: link.name}" text exact>
                    <v-icon left>{{ link.meta.icon }}</v-icon>{{ link.meta.label }}
                </v-btn>
            </template>
        </v-menu>
    </v-toolbar-items>
</template>

<script lang="ts">
import { Component, Vue} from "vue-property-decorator";
import {routes} from "../../../../Router";
import {RouteConfig} from "vue-router";
@Component
export default class Navbar extends Vue {
    menu = routes.filter((item: RouteConfig)=>{
        return item.meta.menu;
    });

    // return router.filter((route) => {
    //     if(!route.name && route.children) {
    //         route.name = route.children.find(function (child) {
    //             return child.path === '';
    //         }).name;
    //     }

    //     if(route.hasOwnProperty('children')) {
    //         route.children = this.filterNavTree(route.children);
    //     }

    //     return !!route.menu;
    // });


    // export default {
    //     name: "AppHeader",
    //     computed: {
    //         appNavLink: function() {
    //             let routeName = 'Home';

    //             if (this.$store.getters['isAuthenticated']) {
    //                 routeName = 'Dashboard';
    //             }

    //             return this.$router.options.routes.find(function (route) {
    //                 return route.name === routeName;
    //             });
    //         },
    //         filteredNav: function () {
    //             return this.filterNavTree(this.$router.options.routes);
    //         },
    //         protectedNav: function () {
    //             return this.protectNavTree(this.filteredNav);
    //         }
    //     },
    //     data: function() {
    //       return {
    //           drawer: false,
    //           links: []
    //       }
    //     },
    //     methods: {

    //         protectNavTree: function (router) {
    //             return router.filter((route) => {

    //                 let check = route.meta && !!route.meta.requiresAuth;

    //                 if(this.$store.getters['isAuthenticated']) {
    //                     return check;
    //                 }

    //                 return !check;
    //             });
    //         },
    //         toggleDrawer: function (drawer) {
    //             this.drawer = !drawer;
    //         },

    //     },
    // }
}
</script>