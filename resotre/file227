import Vue from "vue";



export function setCardStoreState(state, card, id = null)
{
    let frontRecords = [];
    let backRecords = [];

    let newCard = cloneObject(card);

    if (id) {
        newCard.deck = id;
    }

    if (card.records) {
        card.records.forEach((record)=>{
            if (record.side === 0) {
                frontRecords.push(record);
            } else {
                backRecords.push(record);
            }
        });

        Vue.delete(newCard, 'records');
        newCard.frontRecords = frontRecords;
        newCard.backRecords = backRecords;
    }

    Vue.set(state.byId, newCard.id, newCard);
    if (!state.allIds.includes(newCard.id)) {
        state.allIds.push(newCard.id);
    }
}



export function validate({ params })
{
    return /^\d+$/.test(params.id);
}

export function deckDefault(
    limit_repeat = '',
    limit_learning = '',
    difficulty_index = '',
    base_index = '',
    modifier_index = '',
    name = '',
    description = '',
) {
    return {
        name: name,
        description: description,
        limit_repeat: limit_repeat,
        limit_learning: limit_learning,
        difficulty_index: difficulty_index,
        base_index: base_index,
        modifier_index: modifier_index
    }
}

export function cardDefault(
    name = '',
    frontRecords = [{content:''}],
    backRecords = [{content:''}],
) {
    return {
        name: name,
        frontRecords: frontRecords,
        backRecords: backRecords,
    }
}