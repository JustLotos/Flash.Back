import Axios from "../Plugins/Axios";
import Vue from 'vue';
import Router from  "../Router";
import {AuthModule} from "../Modules/Common/Store/AuthModule";
import {AxiosResponse} from "axios";
import {AuthResponse} from "../Modules/Common/Service/types";
import {NavigationGuardNext, Route} from "vue-router";

let API_URL = process.env.APP_HOST + '/api/v1';

Axios.interceptors.response.use(
    (response) => { return response },
    function (error) {
        const originalRequest = error.config;

        if (error.response?.status === 401 && originalRequest.url === API_URL + '/auth/token/refresh') {
            AuthModule.logout();
            Router.push({name: 'Login'});
        }

        if (
            error.response?.status === 401 &&
            !originalRequest._retry &&
            originalRequest.url !== API_URL + '/auth/login' &&
            originalRequest.url !== API_URL + '/auth/register'
        ) {
            originalRequest._retry = true;
            return AuthModule.refresh()
                .then((response: AxiosResponse<AuthResponse>) => {
                    if (response.status === 200) {
                        Axios.defaults.headers.common['Authorization'] = 'Bearer ' + AuthModule.accessToken;
                        return Axios(originalRequest);
                    }
                }).catch(()=>{
                    AuthModule.logout();
                    Router.push({name: 'Login'});
                });
        }
        return Promise.reject(error);
    }
);

Axios.interceptors.request.use(
    config => {
        if (AuthModule.accessToken) {
            config.headers['Authorization'] = 'Bearer ' + AuthModule.accessToken;
        }
        return config;
    },
    error => Promise.reject(error)
);

Router.beforeEach((to: Route, from: Route, next: NavigationGuardNext<Vue>) => {
    if (to.matched.some(record => record.meta.auth)) {
        if (!AuthModule.isAuthenticated) {
            next({
                name: "Login",
                query: { redirect: to.fullPath }
            });
        }
    }
    next();
});