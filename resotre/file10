<template>
    <v-app-bar app clipped-left dark color="primary">
        <v-app-bar-nav-icon
                class="hidden-md-and-up"
                @click.stop="drawer = !drawer"
        />

        <div class="text-center">
            <v-btn large  color="primary" :to="logo.link">
                <v-icon left>{{ logo.icon }}</v-icon> {{ logo.label }}
            </v-btn>
        </div>

        <v-spacer></v-spacer>

        <v-toolbar-items class="hidden-sm-and-down">
<!--            <template  v-for="(link, index) of protectedNav">-->
<!--                <v-menu :key="index" v-if="link.menu" open-on-hover bottom offset-y>-->
<!--                    <template v-slot:activator="{ on }">-->
<!--                        <v-btn v-on="on" :to="{ name: link.name}" text exact>-->
<!--                            <v-icon left>{{ link.icon }}</v-icon>{{link.label}}-->
<!--                        </v-btn>-->
<!--                    </template>-->

<!--                    <v-list v-if="link.children && link.children.length > 0">-->
<!--                        <v-list-item v-for="item of link.children" :key="item.name" >-->
<!--                            <v-btn :to="{ name: item.name }" text exact>-->
<!--                                <v-icon left>{{ item.icon }}</v-icon>{{ item.label }}-->
<!--                            </v-btn>-->
<!--                        </v-list-item>-->
<!--                    </v-list>-->
<!--                </v-menu>-->
<!--            </template>-->
        </v-toolbar-items>
    </v-app-bar>
</template>

<script lang="ts">
import { Component, Vue } from 'vue-property-decorator';
import {Link, Logo} from "../../../../Router/types";

@Component
export default class FlashHeader extends Vue {
    drawer: boolean = false;
    logo: Link;


    constructor() {
        super();
        this.logo = { path: '/', label: 'FlashBack', icon: 'mdi-home'};
    }
    get filterNavTree() {

        return '';
        // return router.filter((route) => {
        //     if(!route.name && route.children) {
        //         route.name = route.children.find(function (child) {
        //             return child.path === '';
        //         }).name;
        //     }

        //     if(route.hasOwnProperty('children')) {
        //         route.children = this.filterNavTree(route.children);
        //     }

        //     return !!route.menu;
        // });
    }
}


    // export default {
    //     name: "AppHeader",
    //     computed: {
    //         appNavLink: function() {
    //             let routeName = 'Home';

    //             if (this.$store.getters['isAuthenticated']) {
    //                 routeName = 'Dashboard';
    //             }

    //             return this.$router.options.routes.find(function (route) {
    //                 return route.name === routeName;
    //             });
    //         },
    //         filteredNav: function () {
    //             return this.filterNavTree(this.$router.options.routes);
    //         },
    //         protectedNav: function () {
    //             return this.protectNavTree(this.filteredNav);
    //         }
    //     },
    //     data: function() {
    //       return {
    //           drawer: false,
    //           links: []
    //       }
    //     },
    //     methods: {

    //         protectNavTree: function (router) {
    //             return router.filter((route) => {

    //                 let check = route.meta && !!route.meta.requiresAuth;

    //                 if(this.$store.getters['isAuthenticated']) {
    //                     return check;
    //                 }

    //                 return !check;
    //             });
    //         },
    //         toggleDrawer: function (drawer) {
    //             this.drawer = !drawer;
    //         },

    //     },
    // }
</script>

<style scoped>

</style>